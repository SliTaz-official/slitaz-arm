#!/bin/sh
#
# Sat - SliTaz ARM Tool
#
# Copyright (C) 2012-2014 SliTaz ARM - BSD License
# Author: Christophe Lincoln <pankso@slitaz.org>
#
. /lib/libtaz.sh
#. /usr/lib/slitaz/libpkg.sh
. /etc/slitaz/slitaz.conf

# Internal variables: libtaz.sh set: --work= --init=
[ "$work" ] || work="$(pwd)"
[ "$init" ] || init="gz"
initramfs="slitaz-arm.$init"
packages=$work/packages
distro=$work/distro
flavors=$work/flavors
cache=$work/cache
# http://mirror.slitaz.org/packages/cooking/arm/
mirror="http://cook.slitaz.org/cross/arm/packages/"

# Help and usage
usage() {
	cat << EOT

$(boldify "Usage:") $(basename $0) [command|--options]

$(boldify "Commands:")
  gen        Generate a distro cpio/gzip initramfs
  flavors    List and give info about flavors
  pkgs       Distro packages check and count
  clean      Clean up the work directory
  vdisk      Create a virtual disk to be used by Qemu
  emu        Emulate the distro with qemu-system-arm
  mirror     Download or sync the SliTaz ARM mirror

$(boldify "Options:")
  --spk      Include Spk package manager in the distro
  --kmap     Include the system keymap config in the distro
  --work=    Path to work dir with packages and rootfs
  --size=    Specify optional vdisk size (default 20Mb)
  --init=    Specify the initramfs compression: gz bz2 xz
  --flavor=  Generate specified SliTaz ARM flavor

EOT
}

# --> use libpkg.sh when released (function is shared with spk)
# Check mirror ID: return 1 if no changes or mirror unreachable
check_mirror_id() {
	[ "$forced" ] && rm -f ID
	[ -f "ID" ] || echo $$ > ID
	mv ID ID.bak
	if busybox wget -qs ${mirror%/}/ID 2>/dev/null; then
		busybox wget -q ${mirror%/}/ID
	else
		gettext "Mirror is unreachable"; false
		status && return 1
	fi
	if [ "$(cat ID)" == "$(cat ID.bak)" ]; then
		gettext "Mirror is up-to-date"; true
		status && return 1
	fi
}

#
# Commands
#

case "$1" in
	gen)
		time=$(date +%s)
		check_root
		echo ""
		boldify "Generating SliTaz ARM distro"
		separator
		rm -rf $distro $initramfs
		mkdir -p $distro $cache
		
		# Get --flavor= packages lists
		if [ "$flavor" ]; then
			echo -n "Getting $flavor packages.list..."
			cp -f $flavors/$flavor/packages.list .
			status
		fi

		# Packages
		rm -f $cache/packages.full
		if [ -f "packages.list" ]; then
			for pkg in $(cat $packages.list)
			do
				IFS="|"
				grep "^$pkg |" $work/mirror/packages.desc | while read pkg version desc
				do
					echo ${pkg}-${version}-arm.tazpkg | sed s'/ //'g \
						>> $cache/packages.full
				done
				unset IFS
			done
			cd ${work}/mirror
		else
			[ ! -d "$packages" ] && \
				echo "Missing packages.list or packages/ directory" && exit 1
			echo -n "Using packages directory..."
			cd $packages && ls -1 > $cache/packages.full
			status
		fi
		
		# Deps install is not well handled by tazpkg/spk actually.
		# So simply install all packages and don't resolve deps.
		for pkg in $(cat $cache/packages.full)
		do
			pkgdir=$(basename $pkg .tazpkg)
			db=$distro/var/lib/tazpkg
			echo -n "Installing: $(basename $pkg)"
			tazpkg extract $pkg >/dev/null
			. $pkgdir/receipt
			mkdir -p $db/installed/$PACKAGE
			cp $pkgdir/receipt $pkgdir/files.list \
				$db/installed/$PACKAGE
			cp -a $pkgdir/fs/* $distro && rm -rf $pkgdir
			md5sum $(basename $pkg) >> $db/installed.md5
			status
		done

		# Install spk if requested. Spk multiarch support must be tested
		if [ "$spk" ]; then
			hg=http://hg.slitaz.org
			echo -n "Installing: spk ($hg)"
			cd $work
			[ -d "spk" ] || hg clone $hg/spk >/dev/null
			cd $work/spk
			[ "$noup" ] || hg pull -u >/dev/null
			make DESTDIR=$distro install >/dev/null
			status
		fi

		# Move kernel outside the distro
		if [ -d "$distro/boot" ]; then
			cd $work && mv -f $distro/boot/linux-* linux-arm
		else
			echo -n "Missing: $distro/boot"; false
			status && exit 1
		fi

		# SLITAZ_ARCH
		echo -n "Setting SliTaz arch to: arm"
		sed -i s"/SLITAZ_ARCH=.*/SLITAZ_ARCH=\"arm\"/" \
			$distro/etc/slitaz/slitaz.conf
		status

		# Mirror
		echo "$mirror" > $distro/var/lib/tazpkg/mirror

		# /init & /run
		cd $distro
		rm init && ln -s /bin/busybox init
		mkdir -p run

		# Update modules.dep
		. var/lib/tazpkg/installed/linux/receipt
		depmod -b . ${VERSION}-slitaz

		# Custom rootfs: make sure all files belong to root.
		if [ -d "$work/rootfs" ]; then
			echo -n "Copying custom ARM rootfs..."
			tmp=$work/tmp-$$
			mkdir -p $tmp
			cp -r $work/rootfs/* $tmp
			if [ "$kmap" ]; then
				cp /etc/keymap.conf $tmp/etc
			fi
			chown -R root.root $tmp
			cp -a $tmp/* $distro && rm -rf $tmp
			status
		fi

		# Rootfs cpio: gzip xz --> /usr/lib/slitaz/liblive.sh ???
		echo -n "Compressing initramfs: $initramfs"
		case $initramfs in
			*.bz2) find . | cpio -o -H newc | bzip2 > ../$initramfs ;;
			*.gz) find . | cpio -o -H newc | gzip -9 > ../$initramfs ;;
			*.xz) find . | cpio -o -H newc | xz -9 --format=lzma > ../$initramfs ;;
		esac
		
		# Summary
		status
		separator && echo ""
		boldify "SliTaz ARM distro summary"
		separator
		time=$(($(date +%s) - $time))
		echo -n "Build time     : " && echo "${time}s"
		echo -n "Initramfs size : " && du -sh $work/$initramfs | awk '{print $1}'
		echo -n "Rootfs size    : " && du -sh $distro | awk '{print $1}'
		echo -n "Packages       : " && ls $db/installed | wc -l
		separator && echo "" ;;
		
	flavors)
		echo ""
		echo -n "Flavor" && indent 16 "Packages"
		separator
		for flavor in $(ls $flavors)
		do
			pkgs=$(cat $flavors/$flavor/packages.list | wc -l)
			echo -n "$flavor" && indent 16 "$pkgs"
		done
		echo "" ;;
	
	pkgs)
		installed="$distro/var/lib/tazpkg/installed"
		SLITAZ_ARCH="arm"
		count=0
		echo ""
		echo -n "Package name" && indent 24 "Missing dependencie"
		separator
		for pkg in ${installed}/*
		do
			. $pkg/receipt
			for dep in $DEPENDS
			do
				if [ ! -d "${installed}/$dep" ]; then
					echo -n "$(colorize 34 $PACKAGE)" && indent 24 "$dep"
					count=$(($count + 1))
				fi
			done
			unset DEPENDS
		done
		if [ "$count" == 0 ]; then
			echo "No missing dependencies" 
		fi
		separator
		echo -n "Installed packages: "; colorize 32 $(ls $installed | wc -l)
		echo "" ;;
	
	clean)
		check_root
		for r in distro cache linux-arm slitaz-arm.*z; do
			echo -n "Cleaning: $r"
			rm -rf $work/$r && status
		done ;;
	
	vdisk)
		# Lets use and HD in Qemu to store files|packages|whatever
		vdisk="vdisk.img"
		: ${size=20}
		cd $work
		dd if=/dev/zero of=$vdisk bs=1M count=$size
		mkfs.ext4 -q -T ext4 -L "SliTaz" -F $vdisk ;;
	
	emu)
		cd $work
		[ -f "vdisk.img" ] && opts="-hda vdisk.img"
		qemu-system-arm -m 256 $opts \
			-M versatilepb -cpu arm1176 \
			-kernel linux-arm \
			-initrd $initramfs ;;
	
	mirror)
		#
		# --> spk-mirror $mirror --sync --dest=/path ???
		#
		count=0
		mkdir -p $work/mirror && cd $work/mirror
		if ! check_mirror_id; then
			exit 0
		fi
		for list in packages.list packages.desc packages.md5; do
			echo -n "Fetching: $list"
			rm -f $list && wget -q ${mirror%/}/$list
			status
		done
		echo -n "Checking packages $SUM..."
		for pkg in $(cat $work/mirror/packages.list); do
			pkg=${pkg}.tazpkg
			if [ ! -f "$pkg" ]; then
				count=$(($count + 1))
				[ "$count" == 1 ] && newline
				echo -n "Fetching: ${pkg}"
				wget -q ${mirror%/}/$pkg
				status
			fi
			pkgsum=$($CHECKSUM $pkg)
			debug "$pkgsum"
			[ "$pkgsum" ] || pkgsum=$$
			mirsum=$(fgrep -h $pkgsum packages.$SUM)
			debug "$mirsum"
			if [ ! "$pkgsum" == "$mirsum" ]; then
				count=$(($count + 1))
				[ "$count" == 1 ] && newline
				echo -n "Fetching: ${pkg}.tazpkg"
				rm -f $pkg
				wget -q ${mirror%/}/$pkg
				status
			fi
		done
		[ "$count" == 0 ] && status ;;
	
	*) usage ;;
esac
exit 0
