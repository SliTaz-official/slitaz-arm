#!/bin/sh
#
# Sat - SliTaz ARM Tool
#
# Copyright (C) 2012 SliTaz GNU/Linux - BSD License
# Author: Christophe Lincoln <pankso@slitaz.org>
#
. /lib/libtaz.sh
#. /usr/lib/slitaz/libpkg.sh
. /etc/slitaz/slitaz.conf

# Internal variables.
: ${work=$(pwd)}
packages=$work/packages
distro=$work/distro
# http://mirror.slitaz.org/packages/cooking/arm/
mirror="http://cook.slitaz.org/cross/arm/packages/"
# libtaz.sh handle: --init=
[ "$init" ] || init="gz"
initramfs="slitaz-arm.$init"

# Help and usage
usage() {
	cat << EOT

$(boldify "Usage:") $(basename $0) [command|--options]

$(boldify "Commands:")
  gen        Generate a disto cpio/gzip initramfs
  clean      Clean up the work directory
  vdisk      Create a virtual disk to be used by Qemu
  emu        Emulate the distro with qemu-system-arm
  mirror     Download or sync the SliTaz ARM mirror

$(boldify "Options:")
  --kmap     Dump current keymap and include it in distro
  --spk      Include Spk package manager in the distro
  --work=    Path to work dir with packages and rootfs
  --size=    Specify optional vdisk size (default 20Mb)
  --init=    Specify the initramfs compression: gz xz

EOT
}

# --> use libpkg.sh when release (function is shared with spk)
# Check mirror ID: return 1 if no changes or mirror unreachable
check_mirror_id() {
	[ "$forced" ] && rm -f ID
	[ -f "ID" ] || echo $$ > ID
	mv ID ID.bak
	if wget -qs ${mirror%/}/ID; then
		wget -q ${mirror%/}/ID
	else
		gettext "Mirror is unreachable"; false
		status && return 1
	fi
	if [ "$(cat ID)" == "$(cat ID.bak)" ]; then
		gettext "Mirror is up-to-date"; true
		status && return 1
	fi
}

#
# Commands
#

case "$1" in
	gen)
		time=$(date +%s)
		check_root
		rm -rf $distro slitaz-arm.xz
		mkdir -p $distro

		# Packages. Dep install it not well handled by tazpkg/spk actually
		# so simply install all packages and dont resolv deps or use equiv.
		cd $packages
		for pkg in $packages/*.tazpkg
		do
			pkgdir=$(basename $pkg .tazpkg)
			db=$distro/var/lib/tazpkg
			echo -n "Installing: $(basename $pkg)"
			tazpkg extract $pkg >/dev/null
			. $pkgdir/receipt
			mkdir -p $db/installed/$PACKAGE
			cp $pkgdir/receipt $pkgdir/files.list \
				$db/installed/$PACKAGE
			cp -a $pkgdir/fs/* $distro && rm -rf $pkgdir
			md5sum $(basename $pkg) >> $db/installed.md5
			status
		done

		# Install spk if requested. Spk multiarch support must be tested
		if [ "$spk" ]; then
			hg=http://hg.slitaz.org
			echo -n "Installing: spk ($hg)"
			cd $work
			[ -d "spk" ] || hg clone $hg/spk >/dev/null
			cd $work/spk
			[ "$noup" ] || hg pull -u >/dev/null
			make DESTDIR=$distro install >/dev/null
			status
		fi

		# Move kernel outside the distro
		cd $work && mv -f $distro/boot/linux-* linux-arm

		# Get a default kmap: we kbd-base and tazkeymap working now :-)
		if [ "$kmap" ]; then
			echo -n "Dumping current keymap..."
			mkdir $distro/usr/share/kmap
			/bin/busybox dumpkmap > $distro/usr/share/kmap/default.kmap
			status
		fi

		# Fixes: udev not yet cross-compiled
		echo -n "Applying SliTaz ARM fixes..."
		sed -i s"/UDEV=.*/UDEV=\"\"/" $distro/etc/rcS.conf
		status

		# SLITAZ_ARCH
		echo -n "Setting SliTaz arch to: arm"
		sed -i s"/SLITAZ_ARCH=.*/SLITAZ_ARCH=\"arm\"/" \
			$distro/etc/slitaz/slitaz.conf
		status

		# Mirror
		echo "$mirror" > $distro/var/lib/tazpkg/mirror

		# /usr/cross/arm/lib: Must be FIXED when cross-compiling
		# Only used by Busybox before LD_LIBRARY_PATH is set.
		mkdir -p $distro/usr/cross/arm/lib
		cd $distro/usr/cross/arm/lib
		ln -s /lib/libc-2.13.so libc.so.6
		ln -s /lib/ld-2.13.so ld-linux.so.3
		cd $distro

		# /init
		rm init && ln -s /bin/busybox init

		# Update modules.dep
		depmod -b . 3.2.14-slitaz

		# Custom rootfs
		if [ -d "$work/rootfs" ]; then
			echo -n "Copying custom ARM rootfs..."
			cp -r $work/rootfs/* $distro
			status
		fi

		# Rootfs cpio: gzip xz
		echo -n "Compressing initramfs: slitaz-arm.$format"
		case $format in
			bz) find . | cpio -o -H newc | bzip2 > ../$initramfs ;;
			gz) find . | cpio -o -H newc | gzip -9 > ../$initramfs ;;
			xz) find . | cpio -o -H newc | xz -9 --format=lzma \
					> ../$initramfs ;;
		esac
		status
		time=$(($(date +%s) - $time))
		echo "Build time  : ${time}s"
		echo -n "Distro size : "
		cd $work && du -sh $initramfs | awk '{print $1}' ;;
	clean)
		check_root
		for r in distro linux-arm *.*z spk; do
			echo -n "Cleaning: $r"
			rm -rf $work/$r && status
		done ;;
	vdisk)
		# Let use and HD in Qemu to store files|packages|whatever
		vdisk="vdisk.img"
		: ${size=20}
		cd $work
		dd if=/dev/zero of=$vdisk bs=1M count=$size
		mkfs.ext4 -q -T ext4 -L "SliTaz" -F $vdisk ;;
	emu)
		cd $work
		[ -f "vdisk.img" ] && opts="-hda vdisk.img"
		qemu-system-arm -m 256 $opts \
			-M versatilepb -cpu arm1176 \
			-kernel linux-arm \
			-initrd $initramfs ;;
	mirror)
		#
		# --> spk-mirror $mirror --sync --dest=/path ???
		#
		count=0
		mkdir -p $work/mirror && cd $work/mirror
		if ! check_mirror_id; then
			exit 0
		fi
		for list in packages.list packages.desc packages.md5; do
			echo -n "Fetching: $list"
			rm -f $list && wget -q ${mirror%/}/$list
			status
		done
		echo -n "Checking packages $SUM..."
		for pkg in $(cat $work/mirror/packages.list); do
			pkg=${pkg}.tazpkg
			if [ ! -f "$pkg" ]; then
				count=$(($count + 1))
				[ "$count" == 1 ] && newline
				echo -n "Fetching: ${pkg}.tazpkg"
				wget -q ${mirror%/}/$pkg
				status
			fi
			pkgsum=$($CHECKSUM $pkg)
			debug "$pkgsum"
			[ "$pkgsum" ] || pkgsum=$$
			mirsum=$(fgrep -h $pkgsum packages.$SUM)
			debug "$mirsum"
			if [ ! "$pkgsum" == "$mirsum" ]; then
				count=$(($count + 1))
				[ "$count" == 1 ] && newline
				echo -n "Fetching: ${pkg}.tazpkg"
				rm -f $pkg
				wget -q ${mirror%/}/$pkg
				status
			fi
		done
		[ "$count" == 0 ] && status
		;;
	*) usage ;;
esac
exit 0
