#!/bin/sh
#
# TazBerry - SliTaz Raspberry Pi Config Tool
#
# Copyright (C) 2014 SliTaz ARM - BSD License
# Author: Christophe Lincoln <pankso@slitaz.org>
#
. /lib/libtaz.sh

title="{ TazBerry }"
config="/boot/config.txt"
tmpdir="/tmp/tazberry"
tmp="$tmpdir/$$"
height="20"
width="72"

# Use a tmp directory
mkdir -p ${tmpdir}

# Small built-in help
help() {
	cat << EOT

$(boldify "$(gettext 'Usage:')") $(basename $0) [command|rpi_function]

$(boldify "$(gettext 'Commands:')")
  oclock            $(gettext 'Configure overclocking')
  ls-functions      $(gettext 'List TazBerry functions')
  rpi_              $(gettext 'Execute any tazberry_function')
  testsuite         $(gettext 'Run TazBerry testsuite')

EOT
}

#
# RPi functions
#

# This could move to /usr/bin/slitaz-??? or something since it's not
# ARM specific
rpi_stats() {
	ip=$(ifconfig | fgrep -A 1 "encap:Ethernet" | fgrep "inet" | cut -d ":" -f 2)
	mem_total=$(free -m | fgrep "Mem:" | awk '{print $2}')
	mem_used=$(free -m | fgrep "Mem:" | awk '{print $3}')
	mem_used_pct=$(( ( ${mem_used} * 100) / ${mem_total} ))
	cat << EOT
$(gettext 'Kernel')       : $(uname -snrm)
$(gettext 'Uptime')       : $(uptime | awk '{print $3}' | sed s"/:/h /" | sed s"/,/min/")
$(gettext 'Network IP')   : $(echo $ip | awk '{print $1}')
$(gettext 'CPU heat')     : $(awk '{printf "%3.1f C\n", $1/1000}' /sys/class/thermal/thermal_zone0/temp)
$(gettext 'Processes')    : $(ps | wc -l)
$(gettext 'Memory usage') : ${mem_used_pct}%
EOT
}

rpi_turbo() {
	if ! fgrep -q 'force_turbo=1' ${config}; then
		gettext "Enabling Raspberry Pi force turbo..."
		echo "force_turbo=1" >> ${config}; status
	else
		gettext "Disabling Raspberry Pi force turbo..."
		sed -i '/force_turbo=1/'d ${config}; status
	fi
}

# RPi Overclocking
rpi_oclock() {
	cat << EOT
none    700MHz  ARM 250MHz core 400MHz SDRAM 0 overvolt
modest  800MHz  ARM 300MHz core 400MHz SDRAM 0 overvolt
medium  900MHz  ARM 333MHz core 450MHz SDRAM 2 overvolt
high    950MHz  ARM 450MHz core 450MHz SDRAM 6 overvolt
turbo   1000MHz ARM 500MHz core 500MHz SDRAM 6 overvolt
EOT
}

# Unset overclocking
unset_oclock() {
	debug "unset_oclock"
	sed -i \
		-e '/# Overclocking.*/'d \
		-e '/arm_freq=/'d \
		-e '/core_freq=/'d \
		-e '/sdram_freq=/'d \
		-e '/over_voltage=/'d ${config}
	# Remove if 3 empty lines follows
	sed -i '1N;N;/^\n\n$/d;P;D' ${config}
}

# Set overclocking: set_oclock [mode]
set_oclock() {
	debug "set_oclock $1"
	case "$1" in
		none)
			arm_freq=700
			core_freq=250
			sdram_freq=400
			over_voltage=0 ;;
		modest)
			arm_freq=800
			core_freq=300
			sdram_freq=400
			over_voltage=0 ;;
		medium)
			arm_freq=900
			core_freq=333
			sdram_freq=450
			over_voltage=2 ;;
		high)
			arm_freq=950
			core_freq=450
			sdram_freq=450
			over_voltage=6 ;;
		turbo)
			arm_freq=1000
			core_freq=500
			sdram_freq=500
			over_voltage=6 ;;
	esac
	unset_oclock
	cat >> ${config} << EOT
# Overclocking Settings
arm_freq=$arm_freq
core_freq=$core_freq
sdram_freq=$sdram_freq
over_voltage=$over_voltage

EOT
}

#
# GUI Functions
#

# Usage: msg_box "title" "message"
msg_box() {
	dialog --title "{ $1 }" --cr-wrap \
		--ok-label "TazBerry" --msgbox "\n$2" ${height} ${width}
}

# Usage: text_box "file"
text_box() {
	local file="$1"
	if [ -f "$file" ]; then
		dialog --cr-wrap \
			--title "{ $(gettext 'Viewing file:') $file }" \
			--extra-button \
			--extra-label "Edit file" \
			--ok-label "TazBerry" \
			--textbox ${file} ${height} ${width}
	else
		dialog --title "$title" \
			--msgbox "\nERROR: $file does not exist" 10 ${width}
	fi
	# Handle options
	case "$?" in
		3) editor ${file} ;;
	esac
}

# Usage: tail_box "file"
tail_box() {
	dialog --title "{ $(gettext 'Watching file:') $2 }" \
		--tailbox "$1" ${height} ${width}
}

# Packages info and spk-up button
pkgs_box() {
	out="$tmpdir/spk-info.txt"
	spk info --output=raw > ${out}
	dialog --cr-wrap \
		--title "{ $(gettext 'Packages') }" \
		--extra-button \
		--extra-label "$(gettext 'Upgrade')" \
		--ok-label "TazBerry" \
		--textbox "$out" ${height} ${width}
	# Handle options
	case "$?" in
		3) spk-up && gettext "Press ENTER to go back to TazBerry"; read ;;
	esac
}

# Overclocking info TODO: button to setup
oclock_box() {
	mode=$(fgrep arm_freq ${config} | cut -d '=' -f 2)
	case "$mode" in
		700) mode="none" ;;
		800) mode="modest" ;;
		900) mode="medium" ;;
		950) mode="high" ;;
		1000) mode="turbo" ;;
	esac
	dialog \
		--clear --colors \
		--extra-button \
		--title "{ Overclocking }" \
		--ok-label "TazBerry" \
		--extra-label "Set Overclock" \
		--cancel-label "Unset Oclock" \
		--menu "\nSet Raspberry Pi overclocking, current setting: \Zb\Z2$mode" \
		${height} ${width} 14 \
"none"    "700MHz  ARM 250MHz core 400MHz SDRAM 0 overvolt" \
"modest"  "800MHz  ARM 300MHz core 400MHz SDRAM 0 overvolt" \
"medium"  "900MHz  ARM 333MHz core 450MHz SDRAM 2 overvolt" \
"high"    "950MHz  ARM 450MHz core 450MHz SDRAM 6 overvolt" \
"turbo"   "1000MHz ARM 500MHz core 500MHz SDRAM 6 overvolt"  2>${tmp}
	retval="$?"
	mode=$(cat $tmp)
	case "$retval" in
		0) continue ;;
		1) unset_oclock ;;
		3) set_oclock "$mode" ;;
		255) rm -rf ${tmpdir} && exit 0 ;;
	esac
}

gpu_mem_box() {
	dialog \
		--clear \
		--title "$title" \
		--ok-label "Set mem" \
		--cancel-label "TazBerry" \
		--menu "\nSet the memory allocated to the GPU (in MB)" \
		${height} ${width} 14 \
"16"   "For server, NAS, base system without X" \
"32"   "For very small TFT and TV display" \
"64"   "Default value, fine for low latency desktop" \
"128"  "For a faster desktop, using a video player" \
"256"  "For media center, GL/3D applications" 2>${tmp}
	mem=$(cat $tmp)
	sed -i \
		-e s"/#gpu_mem=.*/gpu_mem=$mem/" \
		-e s"/gpu_mem=.*/gpu_mem=$mem/" /boot/config.txt
}

# Main Dialog menu
main_box() {
	dialog \
		--clear \
		--title "$title" \
		--ok-label "Exec" \
		--cancel-label "Quit" \
		--menu "" ${height} ${width} 14 \
"rpi-stats"      "$(gettext 'Show some RPi system stats')" \
"gpu-mem"        "$(gettext 'Set memory split between ARM and GPU')" \
"act-led"        "$(gettext 'Test the RPi onboard ACT green led')" \
"oclock"         "$(gettext 'Overclocking configuration')" \
"rpi-turbo"      "$(gettext 'Enable or disable RPi turbo on next boot')" \
"boot-cmdline"   "$(gettext 'View boot args /boot/cmdline.txt')" \
"boot-config"    "$(gettext 'View config file /boot/config.txt')" \
"packages"       "$(gettext 'SliTaz packages manager') (spk)" \
"config"         "$(gettext 'System config (lang, keyboard, wifi)')" \
"reboot"         "$(gettext 'Reboot SliTaz system')" \
"halt"           "$(gettext 'Halt the Raspberry Pi')" \
"quit"           "$(gettext 'Exit TazBerry tool')" 2>${tmp}
	
	# Handle options
	case "$?" in
		1|255) rm -rf ${tmpdir} && exit 0 ;;
	esac
	
	# Handle actions
	action=$(cat $tmp)
	case "$action" in
		rpi-stats)
			msg_box "RPi Stats" "$(rpi_stats)" ;;
		gpu-mem)
			 gpu_mem_box ;;
		act-led)
			brightness="/sys/class/leds/led0/brightness"
			(echo "1" > ${brightness}
			sleep 3; echo "0" > ${brightness}) & ;;
		oclock)
			oclock_box ;;
		rpi-turbo)
			rpi_turbo && newline 
			gettext "Press ENTER to go back to TazBerry"; read ;;
		boot-cmdline)
			text_box /boot/cmdline.txt ;;
		boot-config)
			text_box ${config} ;;
		packages)
			spk-dialog ;;
		config)
			slitaz-config ;;
		reboot)
			reboot ;;
		halt)
			poweroff ;;
		quit)
			rm -rf ${tmpdir} && exit 0 ;;
	esac
}

# Progress bar testsuite
gauge_box() {
    { for i in $(seq 1 100); do
		echo $i
		sleep 0.01
	done
    echo 100; } | dialog --title "{ TazBerry }" \
		--gauge "Work in progress..." 6 ${width} 0
}

#
# Handle commands
#

case "$1" in
	oclock)
		oclock_box ;;
	
	ls-functions)
		newline
		boldify "$(gettext 'TazBerry functions list')"
		separator
		grep "^rpi_*" $0 | awk '{print "  ", $1}' 
		newline ;;
	
	testsuite)
		gauge_box 
		msg_box "Testsuite" "Test message"
		rpi_stats 
		newline ;;
	 
	rpi_*) 
		# Execute functions 
		$@ ;;
	
	"")
		# No args: display Ncurses dialog
		while true; do
			main_box
		done ;;
	
	*|*help|-h)
		# Display help
		help ;;
esac

# Clean exit
rm -rf ${tmpdir}
exit 0
